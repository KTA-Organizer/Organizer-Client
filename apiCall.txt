# Login
type POST
url  api/auth
data {"username":"","password":""}

# Logout
type DELETE
url  api/auth?token=

# Get all students
type GET
url  api/students

# Get students in an education
type GET
url  api/studentsInEducation?edu=
edu = opleidingid

# Get the currentUser
type GET
url  api/currentUser?token=

# Get a student
type GET
url  api/student?id=
id = student id

#Get opleidingen
type GET
url  api/opleidingen

#insert score for criterium
type POST
url  api/evaluateCrit
data {"critToEval":"","score":""}

#update user
type POST
url  api/updateUser
data {"firstname":"","lastname":"","email":""}

#Get modules in opleiding
type GET
url  api/modulesVoorOpleiding?opleiding=?

#Get categorieen in module
type GET
url  api/categorieenInModules?module=?

#Get doelstellingen in categorie
type GET
url  api/doelstellingenInCategorie?categorie=?

#Get criteria in doelstelling
type GET
url  api/criteriaInDoelstelling?doelstelling=?

#Get volledige opleiding
type GET
url api/fullOpleiding?opleiding=?

#Reset user password
type POST
url  api/resetPassword
data {"username":???,"password":newpw,"confirm":repeatedpw}

#get alle evaluaties van 1 student voor 1 module
type GET
url  api/studentEvaluations?student=&module=

#get evaluatie van student op module
type GET
url  api/studentEvaluation?id=
id = evaluatieId

#get alle rapporten van 1 studentsTable
type GET
url  api/studentReports?id=
id = studentId

#Get rapport of student
type GET
url  api/studentReport?id=
<<<<<<< HEAD
id = rapportid

# create users
type POST
url  api/createUser
data {"firstname":"","lastname":"","email":"","pw":"","id",""}
=======
id = rapportId

#Save new evaluation of student for module
type POST
url api/saveEvaluatie
data example:
 {
     	"name": "opdracht les 4",
     	"studentId": 10,
     	"moduleId": 7,
     	"aspecten": [
     		{
     			"aspectId": 1,
     			"beoordeling": 1
     		},
     		{
     			"aspectId": 2,
     			"beoordeling": 1
     		},
     		{
     			"aspectId": 3,
     			"beoordeling": 1
     		},
     		{
     			"aspectId": 4,
     			"beoordeling": 1
     		}
     	]
     }

# Get an evaluation by name
type get
url api/getEvaluatieByName?name=evaluatieName

# Get an evaluation by id
type GET
url api/getEvaluatie?id=evaluatieId

# GET all evaluations for student in module
type GET
url api/getEvaluatiesPerStudent?modId=?&studId=?

# DELETE an evaluation by id
type DELETE
url api/deleteEvaluatie?id=
id = evaluatieId
